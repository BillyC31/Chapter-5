{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger BinarCarRental - OpenAPI 3.0",
    "description": "\nThis is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://petstore3.swagger.io/api/v3"
    }
  ],
  "tags": [
    {
      "name": "car",
      "description": "Everything about your Cars"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "auth",
      "description": "About authentication"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "to log in",
        "requestBody": {
          "description": "to log in",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if successfully login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Member"
                        },
                        "email": {
                          "type": "string",
                          "example": "member@mail.com"
                        },
                        "token": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwidXNlclJvbGUiOiJtZW1iZXIiLCJpYXQiOjE2ODM0NDMxODZ9.nwcByT_FtuLytOWHUkhFlEegPcchW3hsiwMBqLDFFNg"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "password not correct"
                    },
                    "data": {
                      "type": "string",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "to register a new admin",
        "requestBody": {
          "description": "To add new admin",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if data successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "admin"
                        },
                        "email": {
                          "type": "string",
                          "example": "admin@mail.com"
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "example": "$2a$10$xUchY/sKtVeD7z26.Dh9S.qIpUG4UpnfJOgh1b2g4neZhi7FBxmF6"
                        },
                        "userRole": {
                          "type": "string",
                          "example": "admin"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "If not superadmin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Have No access"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "description": "to register a new member",
        "requestBody": {
          "description": "To add new user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if data successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Member"
                        },
                        "email": {
                          "type": "string",
                          "example": "member@mail.com"
                        },
                        "encryptedPassword": {
                          "type": "string",
                          "example": "$2a$10$xUchY/sKtVeD7z26.Dh9S.qIpUG4UpnfJOgh1b2g4neZhi7FBxmF6"
                        },
                        "userRole": {
                          "type": "string",
                          "example": "Member"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": [
          "car"
        ],
        "description": "to add a new car",
        "requestBody": {
          "description": "To add new aar",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/car"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if data successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Agya"
                        },
                        "size": {
                          "type": "integer",
                          "format": "int64",
                          "example": 7
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 500000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dwxz7wgui/image/upload/v1681750279/pslip0mjkjsymikr1xef.png"
                        },
                        "createdBy": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "car"
        ],
        "description": "to edit a new car",
        "requestBody": {
          "description": "To edit new car",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/editcar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "if data successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "example": "Agya"
                        },
                        "size": {
                          "type": "integer",
                          "format": "int64",
                          "example": 5
                        },
                        "price": {
                          "type": "integer",
                          "format": "int64",
                          "example": 500000
                        },
                        "image": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dwxz7wgui/image/upload/v1681750279/pslip0mjkjsymikr1xef.png"
                        },
                        "createdBy": {
                          "type": "integer",
                          "format": "int64",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2023-05-06T15:23:14.570Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "car"
        ],
        "description": "to delete a new car",
        "responses": {
          "200": {
            "description": "if data successfully deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "car successfully deleted"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "car"
        ],
        "description": "To retrive the list of cars",
        "responses": {
          "200": {
            "description": "If data successfully retrived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "cars": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "Ayla"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int64",
                                "example": 3
                              },
                              "price": {
                                "type": "integer",
                                "format": "int64",
                                "example": 500000
                              },
                              "image": {
                                "type": "string",
                                "example": "https://res.cloudinary.com/dwxz7wgui/image/upload/v1681750279/pslip0mjkjsymikr1xef.png"
                              },
                              "createdBy": {
                                "type": "integer",
                                "format": "int64",
                                "example": 2
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2023-05-06T15:23:14.570Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2023-05-06T15:23:14.570Z"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "user"
        ],
        "description": "To retrive the list of users",
        "responses": {
          "200": {
            "description": "If data successfully retrived",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "format": "int64",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "example": "SuperAdmin Billy"
                              },
                              "email": {
                                "type": "string",
                                "example": "superadmin@mail.com"
                              },
                              "encryptedPassword": {
                                "type": "string",
                                "example": "$2a$10$VMD.5vr7tU7YnR.L06HWeetPWsMROc4zhkwaky3cc5Eb79a2mQULi"
                              },
                              "userRole": {
                                "type": "string",
                                "example": "superadmin"
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2023-05-06T15:23:14.570Z"
                              },
                              "updatedAt": {
                                "type": "string",
                                "example": "2023-05-06T15:23:14.570Z"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "format": "int64",
                          "example": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "If failed to retrive the data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "FAIL"
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "If unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "register": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "car": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Ayla"
          },
          "size": {
            "type": "string",
            "example": 5
          },
          "price": {
            "type": "string",
            "example": "500000"
          },
          "image": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwxz7wgui/image/upload/v1681750279/pslip0mjkjsymikr1xef.png"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "editcar": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Ayla"
          },
          "size": {
            "type": "string",
            "example": 5
          },
          "price": {
            "type": "string",
            "example": "500000"
          },
          "image": {
            "type": "string",
            "example": "https://res.cloudinary.com/dwxz7wgui/image/upload/v1681750279/pslip0mjkjsymikr1xef.png"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "Register": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}